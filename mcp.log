25-09-01 10:25:37.567 INFO  [server.py 343 <module>] Starting OWGW Management MCP Server...
25-09-01 10:25:37.569 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:25:37.634 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 10:25:37.636 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:25:37.639 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 10:25:37.640 DEBUG [server.py 266 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 10:25:37.645 DEBUG [selector_events.py 64 __init__] Using selector: EpollSelector
25-09-01 10:25:37.645 DEBUG [sse.py 119 __init__] SseServerTransport initialized with endpoint: /messages/
25-09-01 10:27:05.787 DEBUG [sse.py 134 connect_sse] Setting up SSE connection
25-09-01 10:27:05.787 DEBUG [sse.py 146 connect_sse] Created new session with ID: aa4e3aad-5992-4491-93cf-cbcfc48f6e76
25-09-01 10:27:05.787 DEBUG [sse.py 195 connect_sse] Starting SSE response task
25-09-01 10:27:05.788 DEBUG [sse.py 198 connect_sse] Yielding read and write streams
25-09-01 10:27:05.792 DEBUG [sse.py 166 sse_writer] Starting SSE writer
25-09-01 10:27:05.792 DEBUG [sse.py 169 sse_writer] Sent endpoint event: /messages/?session_id=aa4e3aad5992449193cfcbcfc48f6e76
25-09-01 10:27:05.792 DEBUG [sse.py 179 _stream_response] chunk: b'event: endpoint\r\ndata: /messages/?session_id=aa4e3aad5992449193cfcbcfc48f6e76\r\n\r\n'
25-09-01 10:27:05.864 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:27:05.864 DEBUG [sse.py 218 handle_post_message] Parsed session ID: aa4e3aad-5992-4491-93cf-cbcfc48f6e76
25-09-01 10:27:05.865 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"sampling":{},"elicitation":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp-inspector","version":"0.16.5"}}}'
25-09-01 10:27:05.865 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)
25-09-01 10:27:05.865 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f161d1b23f0>))
25-09-01 10:27:05.866 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=0, result={'protocolVersion': '2025-06-18', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Ucentral OWGW MCP Server', 'version': '1.13.1'}})), metadata=None)
25-09-01 10:27:05.867 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-06-18","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Ucentral OWGW MCP Server","version":"1.13.1"}}}\r\n\r\n'
25-09-01 10:27:05.904 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:27:05.905 DEBUG [sse.py 218 handle_post_message] Parsed session ID: aa4e3aad-5992-4491-93cf-cbcfc48f6e76
25-09-01 10:27:05.905 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/initialized"}'
25-09-01 10:27:05.905 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 10:27:05.905 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f161d3a7240>))
25-09-01 10:27:05.906 DEBUG [server.py 587 run] Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 10:27:20.792 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:27:20.792535+00:00\r\n\r\n'
25-09-01 10:27:35.794 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:27:35.794013+00:00\r\n\r\n'
25-09-01 10:27:50.795 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:27:50.795839+00:00\r\n\r\n'
25-09-01 10:28:05.798 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:28:05.797931+00:00\r\n\r\n'
25-09-01 10:28:20.800 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:28:20.800412+00:00\r\n\r\n'
25-09-01 10:28:26.144 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:28:26.144 DEBUG [sse.py 218 handle_post_message] Parsed session ID: aa4e3aad-5992-4491-93cf-cbcfc48f6e76
25-09-01 10:28:26.144 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":1,"method":"tools/list","params":{"_meta":{"progressToken":1}}}'
25-09-01 10:28:26.144 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)
25-09-01 10:28:26.144 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f161d1e4650>))
25-09-01 10:28:26.145 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f161d3b3890>
25-09-01 10:28:26.145 INFO  [server.py 624 _handle_request] Processing request of type ListToolsRequest
25-09-01 10:28:26.146 DEBUG [server.py 626 _handle_request] Dispatching request of type ListToolsRequest
25-09-01 10:28:26.147 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 10:28:26.147 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'tools': [{'name': 'update_owgw_addr', 'description': 'Update OWGW address.\nArgs:\n    addr: New OWGW address\n    user: OWSEC username\n    password: OWSEC password\n', 'inputSchema': {'properties': {'addr': {'title': 'Addr', 'type': 'string'}, 'user': {'title': 'User', 'type': 'string'}, 'password': {'title': 'Password', 'type': 'string'}}, 'required': ['addr', 'user', 'password'], 'title': 'update_owgw_addrArguments', 'type': 'object'}}, {'name': 'get_systemInfo', 'description': 'Get OWGW system information.', 'inputSchema': {'properties': {}, 'title': 'get_systemInfoArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_systemInfoOutput', 'type': 'object'}}, {'name': 'get_systemResource', 'description': 'Get OWGW system resource usage.', 'inputSchema': {'properties': {}, 'title': 'get_systemResourceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_systemResourceOutput', 'type': 'object'}}, {'name': 'get_device', 'description': 'Get OWGW device information by serial number.\nAgrs:\n    serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'get_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_deviceOutput', 'type': 'object'}}, {'name': 'delete_device', 'description': 'Get OWGW device information by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'delete_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'delete_deviceOutput', 'type': 'object'}}, {'name': 'get_devicestatus', 'description': 'Get OWGW device status by serial number.        \nAgrs:\n    serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'get_devicestatusArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicestatusOutput', 'type': 'object'}}, {'name': 'get_devicestats', 'description': 'Get OWGW device stats by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_devicestatsArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicestatsOutput', 'type': 'object'}}, {'name': 'get_healthychecks', 'description': 'Get OWGW device healthy checks by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_healthychecksArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_healthychecksOutput', 'type': 'object'}}, {'name': 'reboot_device', 'description': 'Reboot OWGW device by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'reboot_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'reboot_deviceOutput', 'type': 'object'}}, {'name': 'get_capabilities', 'description': 'Get OWGW capabilities.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_capabilitiesArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_capabilitiesOutput', 'type': 'object'}}, {'name': 'list_devices', 'description': 'List OWGW devices.', 'inputSchema': {'properties': {}, 'title': 'list_devicesArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'list_devicesOutput', 'type': 'object'}}, {'name': 'get_logs', 'description': 'Get OWGW device logs by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_logsArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_logsOutput', 'type': 'object'}}, {'name': 'get_devicecount', 'description': 'Get OWGW device count.', 'inputSchema': {'properties': {}, 'title': 'get_devicecountArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicecountOutput', 'type': 'object'}}]})), metadata=None)
25-09-01 10:28:26.147 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"tools":[{"name":"update_owgw_addr","description":"Update OWGW address.\\nArgs:\\n    addr: New OWGW address\\n    user: OWSEC username\\n    password: OWSEC password\\n","inputSchema":{"properties":{"addr":{"title":"Addr","type":"string"},"user":{"title":"User","type":"string"},"password":{"title":"Password","type":"string"}},"required":["addr","user","password"],"title":"update_owgw_addrArguments","type":"object"}},{"name":"get_systemInfo","description":"Get OWGW system information.","inputSchema":{"properties":{},"title":"get_systemInfoArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_systemInfoOutput","type":"object"}},{"name":"get_systemResource","description":"Get OWGW system resource usage.","inputSchema":{"properties":{},"title":"get_systemResourceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_systemResourceOutput","type":"object"}},{"name":"get_device","description":"Get OWGW device information by serial number.\\nAgrs:\\n    serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"get_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_deviceOutput","type":"object"}},{"name":"delete_device","description":"Get OWGW device information by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"delete_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"delete_deviceOutput","type":"object"}},{"name":"get_devicestatus","description":"Get OWGW device status by serial number.        \\nAgrs:\\n    serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"get_devicestatusArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicestatusOutput","type":"object"}},{"name":"get_devicestats","description":"Get OWGW device stats by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_devicestatsArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicestatsOutput","type":"object"}},{"name":"get_healthychecks","description":"Get OWGW device healthy checks by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_healthychecksArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_healthychecksOutput","type":"object"}},{"name":"reboot_device","description":"Reboot OWGW device by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"reboot_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"reboot_deviceOutput","type":"object"}},{"name":"get_capabilities","description":"Get OWGW capabilities.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_capabilitiesArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_capabilitiesOutput","type":"object"}},{"name":"list_devices","description":"List OWGW devices.","inputSchema":{"properties":{},"title":"list_devicesArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"list_devicesOutput","type":"object"}},{"name":"get_logs","description":"Get OWGW device logs by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_logsArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_logsOutput","type":"object"}},{"name":"get_devicecount","description":"Get OWGW device count.","inputSchema":{"properties":{},"title":"get_devicecountArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicecountOutput","type":"object"}}]}}\r\n\r\n'
25-09-01 10:28:35.802 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:28:35.802440+00:00\r\n\r\n'
25-09-01 10:28:42.718 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:28:42.718 DEBUG [sse.py 218 handle_post_message] Parsed session ID: aa4e3aad-5992-4491-93cf-cbcfc48f6e76
25-09-01 10:28:42.718 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":2,"method":"tools/call","params":{"_meta":{"progressToken":2},"name":"get_systemInfo","arguments":{}}}'
25-09-01 10:28:42.718 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 2}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=2)
25-09-01 10:28:42.718 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 2}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f161d1d96d0>))
25-09-01 10:28:42.719 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f161d3b2ad0>
25-09-01 10:28:42.719 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 10:28:42.719 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 10:28:42.721 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:28:42.740 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 10:28:42.742 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:28:42.745 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 10:28:42.746 DEBUG [server.py 266 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 10:30:08.942 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 10:30:08.952 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=info HTTP/1.1" 200 None
25-09-01 10:30:08.954 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 10:30:08.954 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'content': [{'type': 'text', 'text': "Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\nresult\n  Input should be a valid string [type=string_type, input_value={'UI': 'https://openwifi....'2.11.0(29) - 7803dde7'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}], 'isError': True})), metadata=None)
25-09-01 10:30:08.955 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:30:08.955288+00:00\r\n\r\n'
25-09-01 10:30:08.955 DEBUG [sse.py 200 _listen_for_disconnect] Got event: http.disconnect. Stop streaming.
25-09-01 10:30:08.955 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"content":[{"type":"text","text":"Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\\nresult\\n  Input should be a valid string [type=string_type, input_value={\'UI\': \'https://openwifi....\'2.11.0(29) - 7803dde7\'}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}],"isError":true}}\r\n\r\n'
25-09-01 10:30:08.956 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:30:08.956 DEBUG [sse.py 218 handle_post_message] Parsed session ID: aa4e3aad-5992-4491-93cf-cbcfc48f6e76
25-09-01 10:30:08.956 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/cancelled","params":{"requestId":2,"reason":"McpError: MCP error -32001: Request timed out"}}'
25-09-01 10:30:08.956 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/cancelled', params={'requestId': 2, 'reason': 'McpError: MCP error -32001: Request timed out'}, jsonrpc='2.0')
25-09-01 10:30:08.957 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/cancelled', params={'requestId': 2, 'reason': 'McpError: MCP error -32001: Request timed out'}, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f161d1bd390>))
25-09-01 10:30:08.957 DEBUG [sse.py 134 connect_sse] Setting up SSE connection
25-09-01 10:30:08.957 DEBUG [sse.py 146 connect_sse] Created new session with ID: 7e0f8d20-9387-40f1-9e2d-fe3960103310
25-09-01 10:30:08.957 DEBUG [sse.py 195 connect_sse] Starting SSE response task
25-09-01 10:30:08.957 DEBUG [sse.py 198 connect_sse] Yielding read and write streams
25-09-01 10:30:08.960 DEBUG [sse.py 134 connect_sse] Setting up SSE connection
25-09-01 10:30:08.961 DEBUG [sse.py 146 connect_sse] Created new session with ID: fdc78b53-edda-4f91-9803-afa1c61a5c32
25-09-01 10:30:08.961 DEBUG [sse.py 195 connect_sse] Starting SSE response task
25-09-01 10:30:08.961 DEBUG [sse.py 198 connect_sse] Yielding read and write streams
25-09-01 10:30:08.964 DEBUG [sse.py 193 response_wrapper] Client session disconnected aa4e3aad-5992-4491-93cf-cbcfc48f6e76
25-09-01 10:30:08.965 DEBUG [sse.py 166 sse_writer] Starting SSE writer
25-09-01 10:30:08.965 DEBUG [sse.py 200 _listen_for_disconnect] Got event: http.disconnect. Stop streaming.
25-09-01 10:30:08.965 DEBUG [sse.py 166 sse_writer] Starting SSE writer
25-09-01 10:30:08.965 DEBUG [sse.py 200 _listen_for_disconnect] Got event: http.disconnect. Stop streaming.
25-09-01 10:30:08.965 DEBUG [sse.py 193 response_wrapper] Client session disconnected 7e0f8d20-9387-40f1-9e2d-fe3960103310
25-09-01 10:30:08.966 DEBUG [sse.py 193 response_wrapper] Client session disconnected fdc78b53-edda-4f91-9803-afa1c61a5c32
25-09-01 10:30:20.063 INFO  [server.py 342 <module>] Starting OWGW Management MCP Server...
25-09-01 10:30:20.065 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:30:20.152 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 10:30:20.153 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:30:20.157 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 10:30:20.158 DEBUG [server.py 265 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 10:30:20.163 DEBUG [selector_events.py 64 __init__] Using selector: EpollSelector
25-09-01 10:30:20.163 DEBUG [sse.py 119 __init__] SseServerTransport initialized with endpoint: /messages/
25-09-01 10:30:42.953 DEBUG [sse.py 134 connect_sse] Setting up SSE connection
25-09-01 10:30:42.953 DEBUG [sse.py 146 connect_sse] Created new session with ID: 4d925f43-b513-469e-9188-d355cb3db715
25-09-01 10:30:42.953 DEBUG [sse.py 195 connect_sse] Starting SSE response task
25-09-01 10:30:42.953 DEBUG [sse.py 198 connect_sse] Yielding read and write streams
25-09-01 10:30:42.957 DEBUG [sse.py 166 sse_writer] Starting SSE writer
25-09-01 10:30:42.957 DEBUG [sse.py 169 sse_writer] Sent endpoint event: /messages/?session_id=4d925f43b513469e9188d355cb3db715
25-09-01 10:30:42.957 DEBUG [sse.py 179 _stream_response] chunk: b'event: endpoint\r\ndata: /messages/?session_id=4d925f43b513469e9188d355cb3db715\r\n\r\n'
25-09-01 10:30:43.017 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:30:43.018 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 4d925f43-b513-469e-9188-d355cb3db715
25-09-01 10:30:43.018 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"sampling":{},"elicitation":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp-inspector","version":"0.16.5"}}}'
25-09-01 10:30:43.018 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)
25-09-01 10:30:43.018 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f7c7925a3f0>))
25-09-01 10:30:43.020 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=0, result={'protocolVersion': '2025-06-18', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Ucentral OWGW MCP Server', 'version': '1.13.1'}})), metadata=None)
25-09-01 10:30:43.020 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-06-18","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Ucentral OWGW MCP Server","version":"1.13.1"}}}\r\n\r\n'
25-09-01 10:30:43.058 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:30:43.058 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 4d925f43-b513-469e-9188-d355cb3db715
25-09-01 10:30:43.059 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/initialized"}'
25-09-01 10:30:43.059 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 10:30:43.059 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f7c7944b130>))
25-09-01 10:30:43.060 DEBUG [server.py 587 run] Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 10:30:48.017 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:30:48.017 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 4d925f43-b513-469e-9188-d355cb3db715
25-09-01 10:30:48.018 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":1,"method":"tools/list","params":{"_meta":{"progressToken":1}}}'
25-09-01 10:30:48.018 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)
25-09-01 10:30:48.018 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f7c79288550>))
25-09-01 10:30:48.019 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f7c79457890>
25-09-01 10:30:48.019 INFO  [server.py 624 _handle_request] Processing request of type ListToolsRequest
25-09-01 10:30:48.019 DEBUG [server.py 626 _handle_request] Dispatching request of type ListToolsRequest
25-09-01 10:30:48.021 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 10:30:48.021 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'tools': [{'name': 'update_owgw_addr', 'description': 'Update OWGW address.\nArgs:\n    addr: New OWGW address\n    user: OWSEC username\n    password: OWSEC password\n', 'inputSchema': {'properties': {'addr': {'title': 'Addr', 'type': 'string'}, 'user': {'title': 'User', 'type': 'string'}, 'password': {'title': 'Password', 'type': 'string'}}, 'required': ['addr', 'user', 'password'], 'title': 'update_owgw_addrArguments', 'type': 'object'}}, {'name': 'get_systemInfo', 'description': 'Get OWGW system information.', 'inputSchema': {'properties': {}, 'title': 'get_systemInfoArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_systemInfoOutput', 'type': 'object'}}, {'name': 'get_systemResource', 'description': 'Get OWGW system resource usage.', 'inputSchema': {'properties': {}, 'title': 'get_systemResourceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_systemResourceOutput', 'type': 'object'}}, {'name': 'get_device', 'description': 'Get OWGW device information by serial number.\nAgrs:\n    serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'get_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_deviceOutput', 'type': 'object'}}, {'name': 'delete_device', 'description': 'Get OWGW device information by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'delete_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'delete_deviceOutput', 'type': 'object'}}, {'name': 'get_devicestatus', 'description': 'Get OWGW device status by serial number.        \nAgrs:\n    serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'get_devicestatusArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicestatusOutput', 'type': 'object'}}, {'name': 'get_devicestats', 'description': 'Get OWGW device stats by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_devicestatsArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicestatsOutput', 'type': 'object'}}, {'name': 'get_healthychecks', 'description': 'Get OWGW device healthy checks by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_healthychecksArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_healthychecksOutput', 'type': 'object'}}, {'name': 'reboot_device', 'description': 'Reboot OWGW device by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'reboot_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'reboot_deviceOutput', 'type': 'object'}}, {'name': 'get_capabilities', 'description': 'Get OWGW capabilities.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_capabilitiesArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_capabilitiesOutput', 'type': 'object'}}, {'name': 'list_devices', 'description': 'List OWGW devices.', 'inputSchema': {'properties': {}, 'title': 'list_devicesArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'list_devicesOutput', 'type': 'object'}}, {'name': 'get_logs', 'description': 'Get OWGW device logs by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_logsArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_logsOutput', 'type': 'object'}}, {'name': 'get_devicecount', 'description': 'Get OWGW device count.', 'inputSchema': {'properties': {}, 'title': 'get_devicecountArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicecountOutput', 'type': 'object'}}]})), metadata=None)
25-09-01 10:30:48.021 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"tools":[{"name":"update_owgw_addr","description":"Update OWGW address.\\nArgs:\\n    addr: New OWGW address\\n    user: OWSEC username\\n    password: OWSEC password\\n","inputSchema":{"properties":{"addr":{"title":"Addr","type":"string"},"user":{"title":"User","type":"string"},"password":{"title":"Password","type":"string"}},"required":["addr","user","password"],"title":"update_owgw_addrArguments","type":"object"}},{"name":"get_systemInfo","description":"Get OWGW system information.","inputSchema":{"properties":{},"title":"get_systemInfoArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_systemInfoOutput","type":"object"}},{"name":"get_systemResource","description":"Get OWGW system resource usage.","inputSchema":{"properties":{},"title":"get_systemResourceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_systemResourceOutput","type":"object"}},{"name":"get_device","description":"Get OWGW device information by serial number.\\nAgrs:\\n    serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"get_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_deviceOutput","type":"object"}},{"name":"delete_device","description":"Get OWGW device information by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"delete_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"delete_deviceOutput","type":"object"}},{"name":"get_devicestatus","description":"Get OWGW device status by serial number.        \\nAgrs:\\n    serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"get_devicestatusArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicestatusOutput","type":"object"}},{"name":"get_devicestats","description":"Get OWGW device stats by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_devicestatsArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicestatsOutput","type":"object"}},{"name":"get_healthychecks","description":"Get OWGW device healthy checks by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_healthychecksArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_healthychecksOutput","type":"object"}},{"name":"reboot_device","description":"Reboot OWGW device by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"reboot_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"reboot_deviceOutput","type":"object"}},{"name":"get_capabilities","description":"Get OWGW capabilities.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_capabilitiesArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_capabilitiesOutput","type":"object"}},{"name":"list_devices","description":"List OWGW devices.","inputSchema":{"properties":{},"title":"list_devicesArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"list_devicesOutput","type":"object"}},{"name":"get_logs","description":"Get OWGW device logs by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_logsArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_logsOutput","type":"object"}},{"name":"get_devicecount","description":"Get OWGW device count.","inputSchema":{"properties":{},"title":"get_devicecountArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicecountOutput","type":"object"}}]}}\r\n\r\n'
25-09-01 10:30:57.958 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:30:57.957953+00:00\r\n\r\n'
25-09-01 10:31:03.823 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:31:03.824 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 4d925f43-b513-469e-9188-d355cb3db715
25-09-01 10:31:03.824 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":2,"method":"tools/call","params":{"_meta":{"progressToken":2},"name":"get_systemInfo","arguments":{}}}'
25-09-01 10:31:03.824 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 2}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=2)
25-09-01 10:31:03.824 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 2}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f7c792858b0>))
25-09-01 10:31:03.825 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f7c79456ad0>
25-09-01 10:31:03.825 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 10:31:03.825 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 10:31:03.826 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:31:03.877 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 10:31:03.879 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:31:03.883 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 10:31:03.883 DEBUG [server.py 265 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 10:31:03.884 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 10:31:03.893 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=info HTTP/1.1" 200 None
25-09-01 10:31:03.895 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 10:31:03.895 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'content': [{'type': 'text', 'text': "Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\nresult\n  Input should be a valid string [type=string_type, input_value={'UI': 'https://openwifi....'2.11.0(29) - 7803dde7'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}], 'isError': True})), metadata=None)
25-09-01 10:31:03.895 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"content":[{"type":"text","text":"Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\\nresult\\n  Input should be a valid string [type=string_type, input_value={\'UI\': \'https://openwifi....\'2.11.0(29) - 7803dde7\'}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}],"isError":true}}\r\n\r\n'
25-09-01 10:31:12.960 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:31:12.960788+00:00\r\n\r\n'
25-09-01 10:31:27.962 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:31:27.961933+00:00\r\n\r\n'
25-09-01 10:31:42.962 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:31:42.962811+00:00\r\n\r\n'
25-09-01 10:31:57.963 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:31:57.963527+00:00\r\n\r\n'
25-09-01 10:32:12.964 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:32:12.964819+00:00\r\n\r\n'
25-09-01 10:32:27.965 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:32:27.965779+00:00\r\n\r\n'
25-09-01 10:32:42.966 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:32:42.966914+00:00\r\n\r\n'
25-09-01 10:32:57.967 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:32:57.967633+00:00\r\n\r\n'
25-09-01 10:33:12.968 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:33:12.968675+00:00\r\n\r\n'
25-09-01 10:33:27.969 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:33:27.969643+00:00\r\n\r\n'
25-09-01 10:33:42.971 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:33:42.971041+00:00\r\n\r\n'
25-09-01 10:33:57.972 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:33:57.971937+00:00\r\n\r\n'
25-09-01 10:33:59.410 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:33:59.410 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 4d925f43-b513-469e-9188-d355cb3db715
25-09-01 10:33:59.410 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":3,"method":"tools/call","params":{"_meta":{"progressToken":3},"name":"get_systemResource","arguments":{}}}'
25-09-01 10:33:59.410 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 3}, 'name': 'get_systemResource', 'arguments': {}}, jsonrpc='2.0', id=3)
25-09-01 10:33:59.410 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 3}, 'name': 'get_systemResource', 'arguments': {}}, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f7c792904b0>))
25-09-01 10:33:59.411 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f7c7925b100>
25-09-01 10:33:59.411 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 10:33:59.411 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 10:33:59.412 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:33:59.460 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 10:33:59.461 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:33:59.464 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 10:33:59.465 DEBUG [server.py 265 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 10:33:59.465 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 10:33:59.475 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=resources HTTP/1.1" 200 None
25-09-01 10:33:59.476 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 10:33:59.476 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'content': [{'type': 'text', 'text': "Error executing tool get_systemResource: 1 validation error for get_systemResourceOutput\nresult\n  Input should be a valid string [type=string_type, input_value={'currRealMem': 48128000,...eakVirtMem': 3586708000}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}], 'isError': True})), metadata=None)
25-09-01 10:33:59.476 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"content":[{"type":"text","text":"Error executing tool get_systemResource: 1 validation error for get_systemResourceOutput\\nresult\\n  Input should be a valid string [type=string_type, input_value={\'currRealMem\': 48128000,...eakVirtMem\': 3586708000}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}],"isError":true}}\r\n\r\n'
25-09-01 10:34:12.973 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:34:12.973069+00:00\r\n\r\n'
25-09-01 10:34:27.974 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:34:27.974274+00:00\r\n\r\n'
25-09-01 10:34:42.975 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:34:42.975186+00:00\r\n\r\n'
25-09-01 10:34:57.976 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:34:57.976681+00:00\r\n\r\n'
25-09-01 10:35:09.699 DEBUG [sse.py 200 _listen_for_disconnect] Got event: http.disconnect. Stop streaming.
25-09-01 10:35:09.699 DEBUG [sse.py 193 response_wrapper] Client session disconnected 4d925f43-b513-469e-9188-d355cb3db715
25-09-01 10:41:40.177 INFO  [server.py 342 <module>] Starting OWGW Management MCP Server...
25-09-01 10:41:40.180 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:41:40.281 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 10:41:40.282 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:41:40.287 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 10:41:40.287 DEBUG [server.py 265 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 10:41:40.292 DEBUG [selector_events.py 64 __init__] Using selector: EpollSelector
25-09-01 10:41:40.292 DEBUG [sse.py 119 __init__] SseServerTransport initialized with endpoint: /messages/
25-09-01 10:41:49.855 DEBUG [sse.py 134 connect_sse] Setting up SSE connection
25-09-01 10:41:49.856 DEBUG [sse.py 146 connect_sse] Created new session with ID: f5938f8e-8ef5-4684-ab12-e226d2356107
25-09-01 10:41:49.856 DEBUG [sse.py 195 connect_sse] Starting SSE response task
25-09-01 10:41:49.856 DEBUG [sse.py 198 connect_sse] Yielding read and write streams
25-09-01 10:41:49.860 DEBUG [sse.py 166 sse_writer] Starting SSE writer
25-09-01 10:41:49.860 DEBUG [sse.py 169 sse_writer] Sent endpoint event: /messages/?session_id=f5938f8e8ef54684ab12e226d2356107
25-09-01 10:41:49.860 DEBUG [sse.py 179 _stream_response] chunk: b'event: endpoint\r\ndata: /messages/?session_id=f5938f8e8ef54684ab12e226d2356107\r\n\r\n'
25-09-01 10:41:49.934 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:41:49.934 DEBUG [sse.py 218 handle_post_message] Parsed session ID: f5938f8e-8ef5-4684-ab12-e226d2356107
25-09-01 10:41:49.934 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"sampling":{},"elicitation":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp-inspector","version":"0.16.5"}}}'
25-09-01 10:41:49.935 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)
25-09-01 10:41:49.935 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f73e88ca3f0>))
25-09-01 10:41:49.936 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=0, result={'protocolVersion': '2025-06-18', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Ucentral OWGW MCP Server', 'version': '1.13.1'}})), metadata=None)
25-09-01 10:41:49.936 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-06-18","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Ucentral OWGW MCP Server","version":"1.13.1"}}}\r\n\r\n'
25-09-01 10:41:49.978 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:41:49.978 DEBUG [sse.py 218 handle_post_message] Parsed session ID: f5938f8e-8ef5-4684-ab12-e226d2356107
25-09-01 10:41:49.978 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/initialized"}'
25-09-01 10:41:49.978 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 10:41:49.978 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f73e883b130>))
25-09-01 10:41:49.979 DEBUG [server.py 587 run] Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 10:42:04.860 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:42:04.860746+00:00\r\n\r\n'
25-09-01 10:42:19.862 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:42:19.862031+00:00\r\n\r\n'
25-09-01 10:42:34.863 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:42:34.863042+00:00\r\n\r\n'
25-09-01 10:42:49.865 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:42:49.865715+00:00\r\n\r\n'
25-09-01 10:43:04.866 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:43:04.866644+00:00\r\n\r\n'
25-09-01 10:43:19.867 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:43:19.867750+00:00\r\n\r\n'
25-09-01 10:43:34.868 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:43:34.868703+00:00\r\n\r\n'
25-09-01 10:43:49.869 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:43:49.869816+00:00\r\n\r\n'
25-09-01 10:44:04.871 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:44:04.871392+00:00\r\n\r\n'
25-09-01 10:44:19.873 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:44:19.873674+00:00\r\n\r\n'
25-09-01 10:44:34.874 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:44:34.874370+00:00\r\n\r\n'
25-09-01 10:44:49.876 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:44:49.875999+00:00\r\n\r\n'
25-09-01 10:45:04.877 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:45:04.877324+00:00\r\n\r\n'
25-09-01 10:45:19.879 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:45:19.878921+00:00\r\n\r\n'
25-09-01 10:45:34.879 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:45:34.879696+00:00\r\n\r\n'
25-09-01 10:45:49.881 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:45:49.881132+00:00\r\n\r\n'
25-09-01 10:46:04.882 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:46:04.882484+00:00\r\n\r\n'
25-09-01 10:46:19.883 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:46:19.883759+00:00\r\n\r\n'
25-09-01 10:46:34.885 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:46:34.885532+00:00\r\n\r\n'
25-09-01 10:46:49.886 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:46:49.886623+00:00\r\n\r\n'
25-09-01 10:47:04.887 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:47:04.887757+00:00\r\n\r\n'
25-09-01 10:47:19.889 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:47:19.889032+00:00\r\n\r\n'
25-09-01 10:47:34.891 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:47:34.891336+00:00\r\n\r\n'
25-09-01 10:47:49.892 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:47:49.892891+00:00\r\n\r\n'
25-09-01 10:48:04.894 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:48:04.894565+00:00\r\n\r\n'
25-09-01 10:48:19.895 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:48:19.895501+00:00\r\n\r\n'
25-09-01 10:48:34.897 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:48:34.897121+00:00\r\n\r\n'
25-09-01 10:48:49.898 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:48:49.898105+00:00\r\n\r\n'
25-09-01 10:49:04.899 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:49:04.899028+00:00\r\n\r\n'
25-09-01 10:49:19.901 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:49:19.901610+00:00\r\n\r\n'
25-09-01 10:49:34.903 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:49:34.903337+00:00\r\n\r\n'
25-09-01 10:49:49.904 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:49:49.904599+00:00\r\n\r\n'
25-09-01 10:50:04.906 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:50:04.906626+00:00\r\n\r\n'
25-09-01 10:50:19.908 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:50:19.908124+00:00\r\n\r\n'
25-09-01 10:50:34.909 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:50:34.909675+00:00\r\n\r\n'
25-09-01 10:50:49.910 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:50:49.910820+00:00\r\n\r\n'
25-09-01 10:51:04.912 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:51:04.912441+00:00\r\n\r\n'
25-09-01 10:51:19.914 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:51:19.914067+00:00\r\n\r\n'
25-09-01 10:51:34.915 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:51:34.915010+00:00\r\n\r\n'
25-09-01 10:51:49.916 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:51:49.916114+00:00\r\n\r\n'
25-09-01 10:52:04.917 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:52:04.917664+00:00\r\n\r\n'
25-09-01 10:52:19.918 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:52:19.918638+00:00\r\n\r\n'
25-09-01 10:52:34.919 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:52:34.919919+00:00\r\n\r\n'
25-09-01 10:52:49.921 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:52:49.921292+00:00\r\n\r\n'
25-09-01 10:53:04.922 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:53:04.922272+00:00\r\n\r\n'
25-09-01 10:53:19.924 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:53:19.923999+00:00\r\n\r\n'
25-09-01 10:53:34.925 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:53:34.925322+00:00\r\n\r\n'
25-09-01 10:53:49.927 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:53:49.927468+00:00\r\n\r\n'
25-09-01 10:54:04.928 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:54:04.928805+00:00\r\n\r\n'
25-09-01 10:54:19.930 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:54:19.930496+00:00\r\n\r\n'
25-09-01 10:54:34.932 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:54:34.932218+00:00\r\n\r\n'
25-09-01 10:54:49.933 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:54:49.933873+00:00\r\n\r\n'
25-09-01 10:55:04.935 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:55:04.935074+00:00\r\n\r\n'
25-09-01 10:55:19.936 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:55:19.936067+00:00\r\n\r\n'
25-09-01 10:55:34.938 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:55:34.938583+00:00\r\n\r\n'
25-09-01 10:55:49.940 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:55:49.940156+00:00\r\n\r\n'
25-09-01 10:56:04.941 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:56:04.941760+00:00\r\n\r\n'
25-09-01 10:56:19.943 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:56:19.943426+00:00\r\n\r\n'
25-09-01 10:56:31.062 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:56:31.062 DEBUG [sse.py 218 handle_post_message] Parsed session ID: f5938f8e-8ef5-4684-ab12-e226d2356107
25-09-01 10:56:31.062 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":1,"method":"tools/list","params":{"_meta":{"progressToken":1}}}'
25-09-01 10:56:31.063 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)
25-09-01 10:56:31.063 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f73e8678650>))
25-09-01 10:56:31.064 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f73e8847890>
25-09-01 10:56:31.064 INFO  [server.py 624 _handle_request] Processing request of type ListToolsRequest
25-09-01 10:56:31.064 DEBUG [server.py 626 _handle_request] Dispatching request of type ListToolsRequest
25-09-01 10:56:31.066 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 10:56:31.066 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'tools': [{'name': 'update_owgw_addr', 'description': 'Update OWGW address.\nArgs:\n    addr: New OWGW address\n    user: OWSEC username\n    password: OWSEC password\n', 'inputSchema': {'properties': {'addr': {'title': 'Addr', 'type': 'string'}, 'user': {'title': 'User', 'type': 'string'}, 'password': {'title': 'Password', 'type': 'string'}}, 'required': ['addr', 'user', 'password'], 'title': 'update_owgw_addrArguments', 'type': 'object'}}, {'name': 'get_systemInfo', 'description': 'Get OWGW system information.', 'inputSchema': {'properties': {}, 'title': 'get_systemInfoArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_systemInfoOutput', 'type': 'object'}}, {'name': 'get_systemResource', 'description': 'Get OWGW system resource usage.', 'inputSchema': {'properties': {}, 'title': 'get_systemResourceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_systemResourceOutput', 'type': 'object'}}, {'name': 'get_device', 'description': 'Get OWGW device information by serial number.\nAgrs:\n    serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'get_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_deviceOutput', 'type': 'object'}}, {'name': 'delete_device', 'description': 'Get OWGW device information by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'delete_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'delete_deviceOutput', 'type': 'object'}}, {'name': 'get_devicestatus', 'description': 'Get OWGW device status by serial number.        \nAgrs:\n    serail: Device serial number\n', 'inputSchema': {'properties': {'serail': {'title': 'Serail', 'type': 'string'}}, 'required': ['serail'], 'title': 'get_devicestatusArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicestatusOutput', 'type': 'object'}}, {'name': 'get_devicestats', 'description': 'Get OWGW device stats by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_devicestatsArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicestatsOutput', 'type': 'object'}}, {'name': 'get_healthychecks', 'description': 'Get OWGW device healthy checks by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_healthychecksArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_healthychecksOutput', 'type': 'object'}}, {'name': 'reboot_device', 'description': 'Reboot OWGW device by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'reboot_deviceArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'reboot_deviceOutput', 'type': 'object'}}, {'name': 'get_capabilities', 'description': 'Get OWGW capabilities.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_capabilitiesArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_capabilitiesOutput', 'type': 'object'}}, {'name': 'list_devices', 'description': 'List OWGW devices.', 'inputSchema': {'properties': {}, 'title': 'list_devicesArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'list_devicesOutput', 'type': 'object'}}, {'name': 'get_logs', 'description': 'Get OWGW device logs by serial number.\nAgrs:\n   serail: Device serial number\n', 'inputSchema': {'properties': {'serial': {'title': 'Serial', 'type': 'string'}}, 'required': ['serial'], 'title': 'get_logsArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_logsOutput', 'type': 'object'}}, {'name': 'get_devicecount', 'description': 'Get OWGW device count.', 'inputSchema': {'properties': {}, 'title': 'get_devicecountArguments', 'type': 'object'}, 'outputSchema': {'properties': {'result': {'title': 'Result', 'type': 'string'}}, 'required': ['result'], 'title': 'get_devicecountOutput', 'type': 'object'}}]})), metadata=None)
25-09-01 10:56:31.067 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"tools":[{"name":"update_owgw_addr","description":"Update OWGW address.\\nArgs:\\n    addr: New OWGW address\\n    user: OWSEC username\\n    password: OWSEC password\\n","inputSchema":{"properties":{"addr":{"title":"Addr","type":"string"},"user":{"title":"User","type":"string"},"password":{"title":"Password","type":"string"}},"required":["addr","user","password"],"title":"update_owgw_addrArguments","type":"object"}},{"name":"get_systemInfo","description":"Get OWGW system information.","inputSchema":{"properties":{},"title":"get_systemInfoArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_systemInfoOutput","type":"object"}},{"name":"get_systemResource","description":"Get OWGW system resource usage.","inputSchema":{"properties":{},"title":"get_systemResourceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_systemResourceOutput","type":"object"}},{"name":"get_device","description":"Get OWGW device information by serial number.\\nAgrs:\\n    serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"get_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_deviceOutput","type":"object"}},{"name":"delete_device","description":"Get OWGW device information by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"delete_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"delete_deviceOutput","type":"object"}},{"name":"get_devicestatus","description":"Get OWGW device status by serial number.        \\nAgrs:\\n    serail: Device serial number\\n","inputSchema":{"properties":{"serail":{"title":"Serail","type":"string"}},"required":["serail"],"title":"get_devicestatusArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicestatusOutput","type":"object"}},{"name":"get_devicestats","description":"Get OWGW device stats by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_devicestatsArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicestatsOutput","type":"object"}},{"name":"get_healthychecks","description":"Get OWGW device healthy checks by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_healthychecksArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_healthychecksOutput","type":"object"}},{"name":"reboot_device","description":"Reboot OWGW device by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"reboot_deviceArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"reboot_deviceOutput","type":"object"}},{"name":"get_capabilities","description":"Get OWGW capabilities.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_capabilitiesArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_capabilitiesOutput","type":"object"}},{"name":"list_devices","description":"List OWGW devices.","inputSchema":{"properties":{},"title":"list_devicesArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"list_devicesOutput","type":"object"}},{"name":"get_logs","description":"Get OWGW device logs by serial number.\\nAgrs:\\n   serail: Device serial number\\n","inputSchema":{"properties":{"serial":{"title":"Serial","type":"string"}},"required":["serial"],"title":"get_logsArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_logsOutput","type":"object"}},{"name":"get_devicecount","description":"Get OWGW device count.","inputSchema":{"properties":{},"title":"get_devicecountArguments","type":"object"},"outputSchema":{"properties":{"result":{"title":"Result","type":"string"}},"required":["result"],"title":"get_devicecountOutput","type":"object"}}]}}\r\n\r\n'
25-09-01 10:56:34.945 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:56:34.945265+00:00\r\n\r\n'
25-09-01 10:56:47.257 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:56:47.257 DEBUG [sse.py 218 handle_post_message] Parsed session ID: f5938f8e-8ef5-4684-ab12-e226d2356107
25-09-01 10:56:47.257 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":2,"method":"tools/call","params":{"_meta":{"progressToken":2},"name":"get_systemInfo","arguments":{}}}'
25-09-01 10:56:47.258 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 2}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=2)
25-09-01 10:56:47.258 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 2}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f73e86716d0>))
25-09-01 10:56:47.258 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f73e8846ad0>
25-09-01 10:56:47.258 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 10:56:47.259 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 10:56:47.260 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:56:47.315 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 10:56:47.317 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:56:47.320 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 10:56:47.321 DEBUG [server.py 265 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 10:56:47.321 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 10:56:47.330 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=info HTTP/1.1" 200 None
25-09-01 10:57:18.909 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 10:57:18.910 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'content': [{'type': 'text', 'text': "Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\nresult\n  Input should be a valid string [type=string_type, input_value={'UI': 'https://openwifi....'2.11.0(29) - 7803dde7'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}], 'isError': True})), metadata=None)
25-09-01 10:57:18.910 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:57:18.910668+00:00\r\n\r\n'
25-09-01 10:57:18.911 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"content":[{"type":"text","text":"Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\\nresult\\n  Input should be a valid string [type=string_type, input_value={\'UI\': \'https://openwifi....\'2.11.0(29) - 7803dde7\'}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}],"isError":true}}\r\n\r\n'
25-09-01 10:57:18.911 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:57:18.911 DEBUG [sse.py 218 handle_post_message] Parsed session ID: f5938f8e-8ef5-4684-ab12-e226d2356107
25-09-01 10:57:18.912 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/cancelled","params":{"requestId":2,"reason":"McpError: MCP error -32001: Request timed out"}}'
25-09-01 10:57:18.912 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/cancelled', params={'requestId': 2, 'reason': 'McpError: MCP error -32001: Request timed out'}, jsonrpc='2.0')
25-09-01 10:57:18.912 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/cancelled', params={'requestId': 2, 'reason': 'McpError: MCP error -32001: Request timed out'}, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f73e86804b0>))
25-09-01 10:57:33.912 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:57:33.912033+00:00\r\n\r\n'
25-09-01 10:57:41.826 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 10:57:41.826 DEBUG [sse.py 218 handle_post_message] Parsed session ID: f5938f8e-8ef5-4684-ab12-e226d2356107
25-09-01 10:57:41.827 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":3,"method":"tools/call","params":{"_meta":{"progressToken":3},"name":"get_systemInfo","arguments":{}}}'
25-09-01 10:57:41.827 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 3}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=3)
25-09-01 10:57:41.827 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 3}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f73e885edd0>))
25-09-01 10:57:41.828 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f73e88cb360>
25-09-01 10:57:41.828 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 10:57:41.828 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 10:57:41.829 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:57:41.890 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 10:57:41.891 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 10:57:41.895 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 10:57:41.895 DEBUG [server.py 265 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 10:57:41.896 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 10:57:41.905 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=info HTTP/1.1" 200 None
25-09-01 10:57:43.869 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 10:57:43.870 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'content': [{'type': 'text', 'text': "Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\nresult\n  Input should be a valid string [type=string_type, input_value={'UI': 'https://openwifi....'2.11.0(29) - 7803dde7'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}], 'isError': True})), metadata=None)
25-09-01 10:57:43.870 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"content":[{"type":"text","text":"Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\\nresult\\n  Input should be a valid string [type=string_type, input_value={\'UI\': \'https://openwifi....\'2.11.0(29) - 7803dde7\'}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}],"isError":true}}\r\n\r\n'
25-09-01 10:57:48.913 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:57:48.913464+00:00\r\n\r\n'
25-09-01 10:58:03.915 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:58:03.915073+00:00\r\n\r\n'
25-09-01 10:58:18.916 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:58:18.916069+00:00\r\n\r\n'
25-09-01 10:58:33.917 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:58:33.917474+00:00\r\n\r\n'
25-09-01 10:58:48.919 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:58:48.919266+00:00\r\n\r\n'
25-09-01 10:59:03.920 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:59:03.919981+00:00\r\n\r\n'
25-09-01 10:59:18.921 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:59:18.921383+00:00\r\n\r\n'
25-09-01 10:59:33.922 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:59:33.922816+00:00\r\n\r\n'
25-09-01 10:59:48.924 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 02:59:48.924101+00:00\r\n\r\n'
25-09-01 11:00:03.925 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:00:03.925244+00:00\r\n\r\n'
25-09-01 11:00:18.926 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:00:18.926564+00:00\r\n\r\n'
25-09-01 11:00:33.927 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:00:33.927548+00:00\r\n\r\n'
25-09-01 11:00:48.928 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:00:48.928552+00:00\r\n\r\n'
25-09-01 11:01:03.929 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:01:03.929376+00:00\r\n\r\n'
25-09-01 11:01:18.930 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:01:18.930282+00:00\r\n\r\n'
25-09-01 11:01:33.931 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:01:33.931051+00:00\r\n\r\n'
25-09-01 11:01:48.932 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:01:48.932083+00:00\r\n\r\n'
25-09-01 11:02:03.934 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:02:03.934109+00:00\r\n\r\n'
25-09-01 11:02:18.935 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:02:18.935120+00:00\r\n\r\n'
25-09-01 11:02:33.936 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:02:33.936177+00:00\r\n\r\n'
25-09-01 11:02:48.937 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:02:48.937325+00:00\r\n\r\n'
25-09-01 11:03:03.939 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:03:03.939290+00:00\r\n\r\n'
25-09-01 11:03:18.940 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:03:18.940442+00:00\r\n\r\n'
25-09-01 11:03:33.941 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:03:33.941741+00:00\r\n\r\n'
25-09-01 11:03:48.943 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:03:48.943698+00:00\r\n\r\n'
25-09-01 11:04:03.944 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:04:03.944789+00:00\r\n\r\n'
25-09-01 11:04:18.945 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:04:18.945642+00:00\r\n\r\n'
25-09-01 11:04:23.289 DEBUG [sse.py 200 _listen_for_disconnect] Got event: http.disconnect. Stop streaming.
25-09-01 11:04:23.290 DEBUG [sse.py 193 response_wrapper] Client session disconnected f5938f8e-8ef5-4684-ab12-e226d2356107
25-09-01 11:04:40.234 INFO  [server.py 341 <module>] Starting OWGW Management MCP Server...
25-09-01 11:04:40.236 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:04:40.252 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:04:40.254 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:04:40.257 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:04:40.257 DEBUG [server.py 264 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:04:40.261 DEBUG [selector_events.py 64 __init__] Using selector: EpollSelector
25-09-01 11:04:40.262 DEBUG [sse.py 119 __init__] SseServerTransport initialized with endpoint: /messages/
25-09-01 11:04:44.992 DEBUG [sse.py 134 connect_sse] Setting up SSE connection
25-09-01 11:04:44.993 DEBUG [sse.py 146 connect_sse] Created new session with ID: e87594be-97a1-482a-be02-aea32ccc45f5
25-09-01 11:04:44.993 DEBUG [sse.py 195 connect_sse] Starting SSE response task
25-09-01 11:04:44.993 DEBUG [sse.py 198 connect_sse] Yielding read and write streams
25-09-01 11:04:44.996 DEBUG [sse.py 166 sse_writer] Starting SSE writer
25-09-01 11:04:44.996 DEBUG [sse.py 169 sse_writer] Sent endpoint event: /messages/?session_id=e87594be97a1482abe02aea32ccc45f5
25-09-01 11:04:44.996 DEBUG [sse.py 179 _stream_response] chunk: b'event: endpoint\r\ndata: /messages/?session_id=e87594be97a1482abe02aea32ccc45f5\r\n\r\n'
25-09-01 11:04:45.056 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:04:45.057 DEBUG [sse.py 218 handle_post_message] Parsed session ID: e87594be-97a1-482a-be02-aea32ccc45f5
25-09-01 11:04:45.057 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"sampling":{},"elicitation":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp-inspector","version":"0.16.5"}}}'
25-09-01 11:04:45.057 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)
25-09-01 11:04:45.057 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7fcf6051a3f0>))
25-09-01 11:04:45.058 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=0, result={'protocolVersion': '2025-06-18', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Ucentral OWGW MCP Server', 'version': '1.13.1'}})), metadata=None)
25-09-01 11:04:45.059 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-06-18","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Ucentral OWGW MCP Server","version":"1.13.1"}}}\r\n\r\n'
25-09-01 11:04:45.091 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:04:45.091 DEBUG [sse.py 218 handle_post_message] Parsed session ID: e87594be-97a1-482a-be02-aea32ccc45f5
25-09-01 11:04:45.092 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/initialized"}'
25-09-01 11:04:45.092 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 11:04:45.092 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7fcf6048f130>))
25-09-01 11:04:45.092 DEBUG [server.py 587 run] Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 11:04:54.750 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:04:54.750 DEBUG [sse.py 218 handle_post_message] Parsed session ID: e87594be-97a1-482a-be02-aea32ccc45f5
25-09-01 11:04:54.750 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":1,"method":"tools/call","params":{"_meta":{"progressToken":1},"name":"get_systemInfo","arguments":{}}}'
25-09-01 11:04:54.750 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 1}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=1)
25-09-01 11:04:54.750 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 1}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7fcf602cc550>))
25-09-01 11:04:54.751 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7fcf6049b890>
25-09-01 11:04:54.752 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 11:04:54.752 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 11:04:54.752 DEBUG [server.py 416 _get_cached_tool_definition] Tool cache miss for get_systemInfo, refreshing cache
25-09-01 11:04:54.754 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:04:54.769 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:04:54.770 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:04:54.775 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:04:54.775 DEBUG [server.py 264 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:04:54.776 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 11:04:54.787 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=info HTTP/1.1" 200 None
25-09-01 11:04:54.789 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 11:04:54.789 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'content': [{'type': 'text', 'text': "{'UI': 'https://openwifi.wlan.local', 'certificates': [{'expiresOn': 1947666676, 'filename': 'restapi-cert.pem'}, {'expiresOn': 1751971755, 'filename': 'websocket-cert.pem'}], 'hostname': '721a44ff0d2f', 'os': 'Linux', 'processors': 24, 'start': 1756350920, 'uptime': 344974, 'version': '2.11.0(29) - 7803dde7'}"}], 'structuredContent': {'result': "{'UI': 'https://openwifi.wlan.local', 'certificates': [{'expiresOn': 1947666676, 'filename': 'restapi-cert.pem'}, {'expiresOn': 1751971755, 'filename': 'websocket-cert.pem'}], 'hostname': '721a44ff0d2f', 'os': 'Linux', 'processors': 24, 'start': 1756350920, 'uptime': 344974, 'version': '2.11.0(29) - 7803dde7'}"}, 'isError': False})), metadata=None)
25-09-01 11:04:54.790 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"content":[{"type":"text","text":"{\'UI\': \'https://openwifi.wlan.local\', \'certificates\': [{\'expiresOn\': 1947666676, \'filename\': \'restapi-cert.pem\'}, {\'expiresOn\': 1751971755, \'filename\': \'websocket-cert.pem\'}], \'hostname\': \'721a44ff0d2f\', \'os\': \'Linux\', \'processors\': 24, \'start\': 1756350920, \'uptime\': 344974, \'version\': \'2.11.0(29) - 7803dde7\'}"}],"structuredContent":{"result":"{\'UI\': \'https://openwifi.wlan.local\', \'certificates\': [{\'expiresOn\': 1947666676, \'filename\': \'restapi-cert.pem\'}, {\'expiresOn\': 1751971755, \'filename\': \'websocket-cert.pem\'}], \'hostname\': \'721a44ff0d2f\', \'os\': \'Linux\', \'processors\': 24, \'start\': 1756350920, \'uptime\': 344974, \'version\': \'2.11.0(29) - 7803dde7\'}"},"isError":false}}\r\n\r\n'
25-09-01 11:04:59.998 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:04:59.998027+00:00\r\n\r\n'
25-09-01 11:05:14.999 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:05:14.999003+00:00\r\n\r\n'
25-09-01 11:05:23.091 DEBUG [sse.py 200 _listen_for_disconnect] Got event: http.disconnect. Stop streaming.
25-09-01 11:05:23.091 DEBUG [sse.py 193 response_wrapper] Client session disconnected e87594be-97a1-482a-be02-aea32ccc45f5
25-09-01 11:09:35.489 INFO  [server.py 342 <module>] Starting OWGW Management MCP Server...
25-09-01 11:09:35.491 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:09:35.510 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:09:35.512 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:09:35.515 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:09:35.516 DEBUG [server.py 265 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:09:35.520 DEBUG [selector_events.py 64 __init__] Using selector: EpollSelector
25-09-01 11:09:35.521 DEBUG [sse.py 119 __init__] SseServerTransport initialized with endpoint: /messages/
25-09-01 11:09:40.458 DEBUG [sse.py 134 connect_sse] Setting up SSE connection
25-09-01 11:09:40.459 DEBUG [sse.py 146 connect_sse] Created new session with ID: 1ce03059-5610-49c1-84aa-e311d70debeb
25-09-01 11:09:40.459 DEBUG [sse.py 195 connect_sse] Starting SSE response task
25-09-01 11:09:40.459 DEBUG [sse.py 198 connect_sse] Yielding read and write streams
25-09-01 11:09:40.462 DEBUG [sse.py 166 sse_writer] Starting SSE writer
25-09-01 11:09:40.462 DEBUG [sse.py 169 sse_writer] Sent endpoint event: /messages/?session_id=1ce03059561049c184aae311d70debeb
25-09-01 11:09:40.462 DEBUG [sse.py 179 _stream_response] chunk: b'event: endpoint\r\ndata: /messages/?session_id=1ce03059561049c184aae311d70debeb\r\n\r\n'
25-09-01 11:09:40.511 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:09:40.511 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 1ce03059-5610-49c1-84aa-e311d70debeb
25-09-01 11:09:40.511 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"sampling":{},"elicitation":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp-inspector","version":"0.16.5"}}}'
25-09-01 11:09:40.511 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)
25-09-01 11:09:40.512 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f0349a223f0>))
25-09-01 11:09:40.513 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=0, result={'protocolVersion': '2025-06-18', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Ucentral OWGW MCP Server', 'version': '1.13.1'}})), metadata=None)
25-09-01 11:09:40.513 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-06-18","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Ucentral OWGW MCP Server","version":"1.13.1"}}}\r\n\r\n'
25-09-01 11:09:40.544 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:09:40.544 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 1ce03059-5610-49c1-84aa-e311d70debeb
25-09-01 11:09:40.544 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/initialized"}'
25-09-01 11:09:40.544 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 11:09:40.544 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f0349c17130>))
25-09-01 11:09:40.545 DEBUG [server.py 587 run] Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 11:09:44.848 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:09:44.848 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 1ce03059-5610-49c1-84aa-e311d70debeb
25-09-01 11:09:44.848 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":1,"method":"tools/call","params":{"_meta":{"progressToken":1},"name":"get_systemInfo","arguments":{}}}'
25-09-01 11:09:44.848 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 1}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=1)
25-09-01 11:09:44.848 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 1}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f0349a54550>))
25-09-01 11:09:44.849 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f0349c23890>
25-09-01 11:09:44.849 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 11:09:44.849 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 11:09:44.849 DEBUG [server.py 416 _get_cached_tool_definition] Tool cache miss for get_systemInfo, refreshing cache
25-09-01 11:09:44.851 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:09:44.921 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:09:44.922 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:09:44.926 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:09:44.926 DEBUG [server.py 265 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:09:44.927 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 11:09:44.937 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=info HTTP/1.1" 200 None
25-09-01 11:10:35.646 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 11:10:35.647 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'content': [{'type': 'text', 'text': "Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\nresult\n  Input should be a valid string [type=string_type, input_value={'UI': 'https://openwifi....'2.11.0(29) - 7803dde7'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}], 'isError': True})), metadata=None)
25-09-01 11:10:35.647 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:10:35.647864+00:00\r\n\r\n'
25-09-01 11:10:35.648 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"content":[{"type":"text","text":"Error executing tool get_systemInfo: 1 validation error for get_systemInfoOutput\\nresult\\n  Input should be a valid string [type=string_type, input_value={\'UI\': \'https://openwifi....\'2.11.0(29) - 7803dde7\'}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}],"isError":true}}\r\n\r\n'
25-09-01 11:10:35.649 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:10:35.649 DEBUG [sse.py 218 handle_post_message] Parsed session ID: 1ce03059-5610-49c1-84aa-e311d70debeb
25-09-01 11:10:35.650 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/cancelled","params":{"requestId":1,"reason":"McpError: MCP error -32001: Request timed out"}}'
25-09-01 11:10:35.650 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/cancelled', params={'requestId': 1, 'reason': 'McpError: MCP error -32001: Request timed out'}, jsonrpc='2.0')
25-09-01 11:10:35.650 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/cancelled', params={'requestId': 1, 'reason': 'McpError: MCP error -32001: Request timed out'}, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7f0349a53c50>))
25-09-01 11:10:39.416 DEBUG [sse.py 200 _listen_for_disconnect] Got event: http.disconnect. Stop streaming.
25-09-01 11:10:39.417 DEBUG [sse.py 193 response_wrapper] Client session disconnected 1ce03059-5610-49c1-84aa-e311d70debeb
25-09-01 11:12:15.476 INFO  [server.py 341 <module>] Starting OWGW Management MCP Server...
25-09-01 11:12:15.478 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:12:15.492 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:12:15.494 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:12:15.497 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:12:15.498 DEBUG [server.py 264 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:12:15.502 DEBUG [selector_events.py 64 __init__] Using selector: EpollSelector
25-09-01 11:12:15.502 DEBUG [sse.py 119 __init__] SseServerTransport initialized with endpoint: /messages/
25-09-01 11:12:21.703 DEBUG [sse.py 134 connect_sse] Setting up SSE connection
25-09-01 11:12:21.703 DEBUG [sse.py 146 connect_sse] Created new session with ID: ef280937-d23e-44f0-8ade-5de9bace5a50
25-09-01 11:12:21.703 DEBUG [sse.py 195 connect_sse] Starting SSE response task
25-09-01 11:12:21.703 DEBUG [sse.py 198 connect_sse] Yielding read and write streams
25-09-01 11:12:21.707 DEBUG [sse.py 166 sse_writer] Starting SSE writer
25-09-01 11:12:21.708 DEBUG [sse.py 169 sse_writer] Sent endpoint event: /messages/?session_id=ef280937d23e44f08ade5de9bace5a50
25-09-01 11:12:21.708 DEBUG [sse.py 179 _stream_response] chunk: b'event: endpoint\r\ndata: /messages/?session_id=ef280937d23e44f08ade5de9bace5a50\r\n\r\n'
25-09-01 11:12:21.760 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:12:21.760 DEBUG [sse.py 218 handle_post_message] Parsed session ID: ef280937-d23e-44f0-8ade-5de9bace5a50
25-09-01 11:12:21.760 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"sampling":{},"elicitation":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp-inspector","version":"0.16.5"}}}'
25-09-01 11:12:21.761 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)
25-09-01 11:12:21.761 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.5'}}, jsonrpc='2.0', id=0)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7fade32ea3f0>))
25-09-01 11:12:21.762 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=0, result={'protocolVersion': '2025-06-18', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Ucentral OWGW MCP Server', 'version': '1.13.1'}})), metadata=None)
25-09-01 11:12:21.762 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-06-18","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Ucentral OWGW MCP Server","version":"1.13.1"}}}\r\n\r\n'
25-09-01 11:12:21.796 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:12:21.797 DEBUG [sse.py 218 handle_post_message] Parsed session ID: ef280937-d23e-44f0-8ade-5de9bace5a50
25-09-01 11:12:21.797 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","method":"notifications/initialized"}'
25-09-01 11:12:21.797 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 11:12:21.797 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7fade34df130>))
25-09-01 11:12:21.798 DEBUG [server.py 587 run] Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 11:12:24.650 DEBUG [sse.py 202 handle_post_message] Handling POST message
25-09-01 11:12:24.650 DEBUG [sse.py 218 handle_post_message] Parsed session ID: ef280937-d23e-44f0-8ade-5de9bace5a50
25-09-01 11:12:24.650 DEBUG [sse.py 231 handle_post_message] Received JSON: b'{"jsonrpc":"2.0","id":1,"method":"tools/call","params":{"_meta":{"progressToken":1},"name":"get_systemInfo","arguments":{}}}'
25-09-01 11:12:24.650 DEBUG [sse.py 235 handle_post_message] Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 1}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=1)
25-09-01 11:12:24.651 DEBUG [sse.py 246 handle_post_message] Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 1}, 'name': 'get_systemInfo', 'arguments': {}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x7fade3318550>))
25-09-01 11:12:24.651 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7fade34eb890>
25-09-01 11:12:24.652 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 11:12:24.652 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 11:12:24.652 DEBUG [server.py 416 _get_cached_tool_definition] Tool cache miss for get_systemInfo, refreshing cache
25-09-01 11:12:24.654 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:12:24.725 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:12:24.727 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:12:24.731 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:12:24.731 DEBUG [server.py 264 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:12:24.732 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 11:12:24.740 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=info HTTP/1.1" 200 None
25-09-01 11:12:24.743 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 11:12:24.743 DEBUG [sse.py 172 sse_writer] Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'content': [{'type': 'text', 'text': '{"UI":"https://openwifi.wlan.local","certificates":[{"expiresOn":1947666676,"filename":"restapi-cert.pem"},{"expiresOn":1751971755,"filename":"websocket-cert.pem"}],"hostname":"721a44ff0d2f","os":"Linux","processors":24,"start":1756350920,"uptime":345424,"version":"2.11.0(29) - 7803dde7"}'}], 'structuredContent': {'result': '{"UI":"https://openwifi.wlan.local","certificates":[{"expiresOn":1947666676,"filename":"restapi-cert.pem"},{"expiresOn":1751971755,"filename":"websocket-cert.pem"}],"hostname":"721a44ff0d2f","os":"Linux","processors":24,"start":1756350920,"uptime":345424,"version":"2.11.0(29) - 7803dde7"}'}, 'isError': False})), metadata=None)
25-09-01 11:12:24.743 DEBUG [sse.py 179 _stream_response] chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"content":[{"type":"text","text":"{\\"UI\\":\\"https://openwifi.wlan.local\\",\\"certificates\\":[{\\"expiresOn\\":1947666676,\\"filename\\":\\"restapi-cert.pem\\"},{\\"expiresOn\\":1751971755,\\"filename\\":\\"websocket-cert.pem\\"}],\\"hostname\\":\\"721a44ff0d2f\\",\\"os\\":\\"Linux\\",\\"processors\\":24,\\"start\\":1756350920,\\"uptime\\":345424,\\"version\\":\\"2.11.0(29) - 7803dde7\\"}"}],"structuredContent":{"result":"{\\"UI\\":\\"https://openwifi.wlan.local\\",\\"certificates\\":[{\\"expiresOn\\":1947666676,\\"filename\\":\\"restapi-cert.pem\\"},{\\"expiresOn\\":1751971755,\\"filename\\":\\"websocket-cert.pem\\"}],\\"hostname\\":\\"721a44ff0d2f\\",\\"os\\":\\"Linux\\",\\"processors\\":24,\\"start\\":1756350920,\\"uptime\\":345424,\\"version\\":\\"2.11.0(29) - 7803dde7\\"}"},"isError":false}}\r\n\r\n'
25-09-01 11:12:36.708 DEBUG [sse.py 236 _ping] ping: b': ping - 2025-09-01 03:12:36.708352+00:00\r\n\r\n'
25-09-01 11:12:49.087 DEBUG [sse.py 200 _listen_for_disconnect] Got event: http.disconnect. Stop streaming.
25-09-01 11:12:49.088 DEBUG [sse.py 193 response_wrapper] Client session disconnected ef280937-d23e-44f0-8ade-5de9bace5a50
25-09-01 11:13:20.407 INFO  [server.py 341 <module>] Starting OWGW Management MCP Server...
25-09-01 11:13:20.413 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:13:20.436 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:13:20.439 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:13:20.444 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:13:20.446 DEBUG [server.py 264 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:13:20.452 DEBUG [selector_events.py 64 __init__] Using selector: EpollSelector
25-09-01 11:13:20.453 DEBUG [sse.py 119 __init__] SseServerTransport initialized with endpoint: /messages/
25-09-01 11:14:25.188 INFO  [server.py 341 <module>] Starting OWGW Management MCP Server...
25-09-01 11:14:25.194 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:14:25.249 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:14:25.252 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:14:25.257 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:14:25.259 DEBUG [server.py 264 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:14:25.265 DEBUG [selector_events.py 64 __init__] Using selector: EpollSelector
25-09-01 11:14:25.275 DEBUG [server.py 587 run] Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
25-09-01 11:14:25.277 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f8184327110>
25-09-01 11:14:25.279 INFO  [server.py 624 _handle_request] Processing request of type ListToolsRequest
25-09-01 11:14:25.280 DEBUG [server.py 626 _handle_request] Dispatching request of type ListToolsRequest
25-09-01 11:14:25.282 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 11:14:39.347 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f8184327250>
25-09-01 11:14:39.349 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 11:14:39.350 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 11:14:39.352 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:14:39.383 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:14:39.387 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:14:39.391 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:14:39.393 DEBUG [server.py 264 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:14:39.394 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 11:14:39.404 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/system?command=info HTTP/1.1" 200 None
25-09-01 11:14:39.407 DEBUG [server.py 673 _handle_request] Response sent
25-09-01 11:14:59.329 DEBUG [server.py 587 run] Received message: <mcp.shared.session.RequestResponder object at 0x7f8184301480>
25-09-01 11:14:59.330 INFO  [server.py 624 _handle_request] Processing request of type CallToolRequest
25-09-01 11:14:59.331 DEBUG [server.py 626 _handle_request] Dispatching request of type CallToolRequest
25-09-01 11:14:59.333 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:14:59.366 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "POST /api/v1/oauth2 HTTP/1.1" 200 None
25-09-01 11:14:59.370 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16001
25-09-01 11:14:59.375 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16001 "GET /api/v1/systemEndpoints HTTP/1.1" 200 None
25-09-01 11:14:59.376 DEBUG [server.py 264 getowgw_addr] Discovered OWGW address: https://openwifi.wlan.local:16002
25-09-01 11:14:59.378 DEBUG [connectionpool.py 1049 _new_conn] Starting new HTTPS connection (1): openwifi.wlan.local:16002
25-09-01 11:14:59.389 DEBUG [connectionpool.py 544 _make_request] https://openwifi.wlan.local:16002 "GET /api/v1/devices HTTP/1.1" 200 None
25-09-01 11:14:59.392 DEBUG [server.py 673 _handle_request] Response sent
